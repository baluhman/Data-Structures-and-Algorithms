//
//  Examples.swift
//  Data-Structures-and-Algorithms
//
//  Created by Uknown on 07/01/2025.
//

struct ArrayExamples {
    func run() {
        // Задача заключается в нахождении самой длинной последовательности единиц в бинарном массиве.
        // Нужно отслеживать длину текущей последовательности единиц
        // и обновлять максимальную длину, когда последовательность прерывается
        func findMaxConsecutiveOnes(nums: [Int]) -> Int {
            // 1. отслеживаем максимальное количество последовательных единиц, которое нашли до текущего момента
            var maxConsecutiveOnes = 0
            // 2. отслеживаем текущую последовательность единиц
            var consecutiveOnes = 0
            
            for num in nums {
                // 3. Если элемент равен 1 то обновляем значение currentCount
                if num == 1 {
                    consecutiveOnes += 1
                } else {
                    // 4. Если элемент не равен 1 (то есть 0 в нашем бинарном массиве), то
                    // берем максимальное число от 2х наших счетчиков
                    maxConsecutiveOnes = max(maxConsecutiveOnes, consecutiveOnes)
                    // и сбрасываем consecutiveOnes
                    consecutiveOnes = 0
                }
            }
            
            // 5. И опять возвращаем результат максимальное число от 2х наших счетчиков (текущего и максимального кол-ва последовательных единиц) после полного прохода по массиву
            // Мы возвращаем не просто maxConsecutiveOnes (что первое приходит в голову),
            // а опять максимальное значение, потому что может быть кейс,
            // когда наш массив заканчивается на самую длинную последовательность 1
            // и в этом случае, если бы мы вернули только maxConsecutiveOnes, то данные были бы некорректны,
            // потому что, maxConsecutiveOnes содержал бы только предудущее сохраненное значение,
            // а корректные данные с максимальным колличеством 1 храняться в consecutiveOnes
            return max(maxConsecutiveOnes, consecutiveOnes)
        }
        
        let result = findMaxConsecutiveOnes(nums: [1,1,1,1,0,0,1,1,1,1,1])
        print(result)
    }
    
}
